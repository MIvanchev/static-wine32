diff --git a/Makefile.am b/Makefile.am
index ff4c963a..b203d549 100644
--- a/Makefile.am
+++ b/Makefile.am
@@ -8,7 +8,7 @@ if BUILD_MODULES
 SUBDIRS += modules
 endif
 if BUILD_PCM_PLUGIN_SHM
-SUBDIRS += aserver
+SUBDIRS +=
 endif
 if BUILD_MIXER
 if BUILD_ALISP
diff --git a/include/local.h b/include/local.h
index 512e4455..005a10b4 100644
--- a/include/local.h
+++ b/include/local.h
@@ -247,7 +247,7 @@ typedef enum _snd_set_mode {
 } snd_set_mode_t;
 
 size_t page_align(size_t size);
-size_t page_size(void);
+size_t alsa_page_size(void);
 size_t page_ptr(size_t object_offset, size_t object_size, size_t *offset, size_t *mmap_offset);
 
 #define safe_strtoll_base _snd_safe_strtoll_base
diff --git a/src/conf.c b/src/conf.c
index 468d41f5..037d4c01 100644
--- a/src/conf.c
+++ b/src/conf.c
@@ -5835,7 +5835,7 @@ static void _snd_config_end(void)
 #endif
 
 #ifndef DOC_HIDDEN
-size_t page_size(void)
+size_t alsa_page_size(void)
 {
 	long s = sysconf(_SC_PAGE_SIZE);
 	assert(s > 0);
@@ -5845,7 +5845,7 @@ size_t page_size(void)
 size_t page_align(size_t size)
 {
 	size_t r;
-	long psz = page_size();
+	long psz = alsa_page_size();
 	r = size % psz;
 	if (r)
 		return size + psz - r;
@@ -5855,7 +5855,7 @@ size_t page_align(size_t size)
 size_t page_ptr(size_t object_offset, size_t object_size, size_t *offset, size_t *mmap_offset)
 {
 	size_t r;
-	long psz = page_size();
+	long psz = alsa_page_size();
 	assert(offset);
 	assert(mmap_offset);
 	*mmap_offset = object_offset;
diff --git a/src/dlmisc.c b/src/dlmisc.c
index d7aff456..934e01ab 100644
--- a/src/dlmisc.c
+++ b/src/dlmisc.c
@@ -105,6 +105,22 @@ int snd_dlpath(char *path, size_t path_len, const char *name)
 	return 0;
 }
 
+#define PLUGIN_CTOR(name, type) _snd_dlsym_constructor_ ## name ## _dlsym_ ## type ## _001
+#define DECLARE_PLUGIN(name, type) void PLUGIN_CTOR(name, type) (void)
+#define REGISTER_PLUGIN(name, type) PLUGIN_CTOR(name, type) ()
+
+DECLARE_PLUGIN(conf_pulse_hook_load_if_running, config_hook);
+DECLARE_PLUGIN(_snd_ctl_arcam_av_open, control);
+//DECLARE_PLUGIN(_snd_ctl_oss_open, control);
+DECLARE_PLUGIN(_snd_ctl_pulse_open, control);
+//DECLARE_PLUGIN(_snd_pcm_a52_open, pcm);
+//DECLARE_PLUGIN(_snd_pcm_aaf_open, pcm);
+//DECLARE_PLUGIN(_snd_pcm_oss_open, pcm);
+DECLARE_PLUGIN(_snd_pcm_pulse_open, pcm);
+DECLARE_PLUGIN(_snd_pcm_upmix_open, pcm);
+//DECLARE_PLUGIN(_snd_pcm_usb_stream_open, pcm);
+DECLARE_PLUGIN(_snd_pcm_vdownmix_open, pcm);
+
 /**
  * \brief Opens a dynamic library - ALSA wrapper for \c dlopen.
  * \param name name of the library, similar to \c dlopen.
@@ -123,8 +139,38 @@ void *snd_dlopen(const char *name, int mode, char *errbuf, size_t errbuflen)
 #endif
 {
 #ifndef PIC
-	if (name == NULL)
+	if (name == NULL
+		|| !strcmp(name, "libasound_module_conf_pulse.so")
+		|| !strcmp(name, "libasound_module_ctl_arcam_av.so")
+		|| !strcmp(name, "libasound_module_ctl_pulse.so")
+		|| !strcmp(name, "libasound_module_pcm_pulse.so")
+		|| !strcmp(name, "libasound_module_pcm_upmix.so")
+		|| !strcmp(name, "libasound_module_pcm_vdownmix.so")
+) {
+		struct snd_dlsym_link *link = snd_dlsym_start;
+		while (link) {
+			if (!strcmp(link->dlsym_name, "conf_pulse_hook_load_if_running")) {
+				break;
+			}
+			link = link->next;
+		}
+
+		if (link == NULL) {
+			REGISTER_PLUGIN(conf_pulse_hook_load_if_running, config_hook);
+			REGISTER_PLUGIN(_snd_ctl_arcam_av_open, control);
+//			REGISTER_PLUGIN(_snd_ctl_oss_open, control);
+			REGISTER_PLUGIN(_snd_ctl_pulse_open, control);
+//			REGISTER_PLUGIN(_snd_pcm_a52_open, pcm);
+//			REGISTER_PLUGIN(_snd_pcm_aaf_open, pcm);
+//			REGISTER_PLUGIN(_snd_pcm_oss_open, pcm);
+			REGISTER_PLUGIN(_snd_pcm_pulse_open, pcm);
+			REGISTER_PLUGIN(_snd_pcm_upmix_open, pcm);
+//			REGISTER_PLUGIN(_snd_pcm_usb_stream_open, pcm);
+			REGISTER_PLUGIN(_snd_pcm_vdownmix_open, pcm);
+	        }
+
 		return &snd_dlsym_start;
+}
 #else
 #ifdef HAVE_LIBDL
 	if (name == NULL) {
diff --git a/src/rawmidi/rawmidi.c b/src/rawmidi/rawmidi.c
index c4b45fa2..b2aba561 100644
--- a/src/rawmidi/rawmidi.c
+++ b/src/rawmidi/rawmidi.c
@@ -161,7 +161,7 @@ static int snd_rawmidi_params_default(snd_rawmidi_t *rawmidi, snd_rawmidi_params
 {
 	assert(rawmidi);
 	assert(params);
-	params->buffer_size = page_size();
+	params->buffer_size = alsa_page_size();
 	params->avail_min = 1;
 	params->no_active_sensing = 1;
 	params->mode = 0;
diff --git a/src/rawmidi/rawmidi_hw.c b/src/rawmidi/rawmidi_hw.c
index 3b1d941e..72162b14 100644
--- a/src/rawmidi/rawmidi_hw.c
+++ b/src/rawmidi/rawmidi_hw.c
@@ -126,7 +126,7 @@ static int snd_rawmidi_hw_params(snd_rawmidi_t *rmidi, snd_rawmidi_params_t * pa
 		size_t alloc_size;
 		void *buf;
 
-		alloc_size = page_size();
+		alloc_size = alsa_page_size();
 		if (params->buffer_size > alloc_size)
 			alloc_size = params->buffer_size;
 		if (alloc_size != hw->buf_size) {
